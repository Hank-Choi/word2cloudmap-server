ManiWordle: Providing Flexible Control over Wordle

Abstract—Among the multifarious tag-clouding techniques, Wordle stands out to the community by providing an aesthetic layout, eliciting the emergence of the participatory culture and usage of tag-clouding in the artistic creations [23]. In this paper, we introduce ManiWordle, a Wordle-based visualization tool that revamps interactions with the layout by supporting custom manipulations. ManiWordle allows people to manipulate typography, color, and composition not only for the layout as a whole, but also for the individual words, enabling them to have better control over the layout result. We first describe our design rationale along with the interaction techniques for tweaking the layout. We then present the results both from the preliminary usability study and from the comparative study between ManiWordle and Wordle. The results suggest that ManiWordle provides higher user satisfaction and an efficient method of creating the desired "art work," harnessing the power behind the ever-increasing popularity of Wordle.

INTRODUCTION
The tremendously huge popularity of Wordle attested the importance of aesthetics and expressiveness in attracting people to use visualizations [23]. People can easily start creating their own visually striking Wordles and freely use their "creations," while inviting themselves into a community of “creators,” not just consumers of an art. As more and more people join the community, various learning activities are taking place throughout blogs and forums. People share their own Wordle tricks and educate themselves with different usages and scenarios which may fit to their needs. Several tricks are introduced in the FAQ page of the Wordle website [27]. Most of the Wordle tricks shared among people deal with the way they manipulate the text fed into Wordle to influence the final layout in a desirable way. For example, one well-known trick, available through the FAQ page, describes how to keep multiple words together by placing ‘~’ between the words in the input text. The trick satisfies people’s need of giving minor final touches over their creations. Another famous Wordle trick is about how to change the color of a specific word. People are to export the wordle image to an image file and manually edit it using graphics editing tools such as Inkscape [7] or Photoshop [1]. Lack of such simple fine-tuning of the resulting image in Wordle could leave people not fully satisfied even after numerous trials of making randomly generated layout. This leaves us much room for improvement in the current Wordle in terms of better accommodating people’s proficiency and creativity needs. In general, usability of interactive systems decreases as the system becomes more flexible by supporting more functionality [10]. At the same time, however, it is also true that a specialized design supporting people’s clearly anticipated needs produces more satisfying experiences overall [10]. Considering the notion of the gulf of execution introduced by Donald Norman [15], the actions allowed by the current Wordle often do not match what people intend to do, making the interaction less effective. Nonetheless, such an unnecessarily wide gulf of execution in Wordle did not hinder its way into becoming the main stream of tag clouding techniques. It is in part because people tend to perceive aesthetic designs as easier to use and they are inclined to have more positive attitude toward them, compared to less-aesthetic ones [9]. Thus, people become more tolerant to usability issues when dealing with aesthetically designed visualizations. Along the same line, it is very arresting that large portion of the Wordle users did not understand what the size of a word signifies. But it is in some sense expected, because not all Wordle users are interested in quantitative analysis of the input text. They were rather intrigued by the visually striking nature of the Wordle visualization [23]. It is not difficult to witness people wanting to interact with static visualizations in various ways. As an essential part of information visualization, interaction is also known to help interactive systems overcome their limitations of representations, which contributes to improving people’s understanding of the underlying datasets through amplified cognition [14, 30]. We think that well-designed interactions to alleviate the limitation resulting from randomness of the Wordle's packing algorithm can make it much more effective as an authoring tool for creative work. We expect that the added flexibility can bridge the gulf of execution in the current Wordle and result in higher user satisfaction in creating more unique art works and taking ownership of the results. In this paper, we present ManiWordle (for Manipulable Wordle, Fig. 1), a more flexible Wordle-based visualization. ManiWordle allows people to interactively manipulate topography, color, position, and orientation of the individual words. After summarizing related work, we describe our design rationale upon which we based our selection of the interaction techniques for modifying the layout. By conducting a usability study and a controlled user study, we investigated the values of the added flexibility over Wordle. The study results show that the additional interactions of ManiWordle help people create more satisfactory layouts than Wordle, enhancing the original features of Wordle that contributed to its way from a novel tag cloud tool to a cultural phenomenon.

RELATED WORK
TagCloud
Since social tagging became popular in Web 2.0 services such as Flickr [29] and Delicious [3], a tag cloud has been serving as an effective medium to visualize user-generated tags. Our work relates to researches on tag cloud visualizations where tags are presented with different font sizes or colors depending on their importance. Most tag cloud visualizations available on the web arrange tags horizontally in a line-by-line manner, and sort them alphabetically or according to their importance or frequency. Tag cloud visualization relates to text/document visualization. There have been interesting research developments in using tag cloud visualizations for the purposes other than describing contents of websites or blogs. Examples include the 500 largest companies, search terms to a website, a script from presidential speech, etc. [24] Some tag cloud visualization tools take general text inputs to create aesthetic visual representations, fusing text/document visualization techniques together. Wordle is leading the way by attracting a huge number of people to participate in creative wordling feasts. Wordle [27] is different from the existing tag cloud visualization tools in many ways. The most significant difference is that it allows words to be in different orientations (angles) other than just the horizontal arrangement without any strict alignment. Before Wordle, there were some attempts to go beyond the conventional horizontal line-by-line alignment of tags implemented in various tools [21, 12, 20]. Gambette and Véronis introduced a tree cloud that arranges the words on a tree to represent their semantic proximity in the input text [4]. Kaser and Lemire presented models and algorithms to display tag clouds in plain HTML supporting two-dimensional layouts, which is in line with the slice-and-dice Treemap layout [8]. WPCumulus is a plug-in for a blog publishing application (WordPress) that shows tags in a rotating 3D sphere using a Flash movie [28]. Collins et al. introduced Parallel Tag Clouds that combine the parallel coordinates and traditional tag clouds for visual exploration of document collection [2]. However, most of tag cloud visualizations do not allow users to change positions or typographical properties of individual words once they are set by an automated layout algorithm, which often leads to user frustrations. There have been many studies to evaluate different tag cloud visualizations. Halvey and Keane evaluated the effect of parameters of tag cloud presentations such as alphabetization and using larger fonts in terms of performing tag identification tasks [5]. They found that the alphabetized list outperformed the tag cloud presentations and the font size and the position of tags were important factors. They also observed that participants scanned tag clouds rather than reading them. Lohmann et al. conducted a comparative study on several tag cloud layout methods to reveal that different layout methods suit different kinds of tasks [11]. For example, a circular layout with decreasing popularity is good for finding the most popular tags. They also presented evidence supporting previous findings that tags near the center of the cloud draw more user attention than those near the borders. Also, tags located in the upper left quadrant are recalled better and found sooner. Rivandeneira et al. investigated the effectiveness of tag cloud layouts in various tasks such as impression formation [17]. They also provided a two-phased paradigm (presentation and interpretation) for evaluating different types of tag clouds. Building upon these studies, we conducted a controlled user study to investigate the effect of selectively added flexible controls in tag cloud visualizations. Schrammel et al. evaluated semantically clustered tag clouds based on co-occurrence [18]. They expressed their concern that “the semantic arrangement must be good enough otherwise users will not be able to distinguish it from random layouts.” User oriented finetuning techniques introduced in ManiWordle can be applied to overcome some of the limitations of automatic layout based on estimation of the similarity among words

Casual InfoVis
Our work is also relevant to the artistic, social or casual information visualizations [16, 22]. Traditional information visualization research has expanded its boundary to reach non-expert users such as artists and general public. They can use the scientific techniques of information visualization to create their own art work for artistic inspiration or artifacts for fun, using their personal computers with data sources available on the web or their computers. Viégas and Wattenberg surveyed the field of artistic information visualization and reported how artists accepted and utilized the scientific techniques in their art creations [22]. An interesting finding was that the artists symbolize their strong point of view by breaking the solid rules of visualization design and visual analytics. Built upon artistic infovis and ambient infovis [19], Pousman et al. [16] proposed "casual infovis" as an umbrella term to cover subdomains of infovis at the boundary of traditional infovis. The distinctive difference of casual infovis systems is that they are intended to serve a broader set of audiences, focusing on less task driven activities and more personally meaningful datasets. ManiWordle is a casual infovis tool that improves upon Wordle, an existing aesthetic tag cloud visualization tool. Hearst and Rosner provided an analysis on the use of tag clouds across various websites, while highlighting its primary role as a social signaller [6]. They found out that tag clouds function more as a suggestive device than as a precise depiction of the underlying phenomenon. Viégas et al. suggested a new perspective to view visualization as an authoring and remixing tool [23]. Their survey on Wordle showed an interesting future research direction in the perspective. In this paper, we argue that ManiWordle, with more flexible user control, makes users more satisfied with their creations, contributing to helping information visualization research reach further out to a broad range of audiences.

Wordle
Wordle is a web-based word cloud generator, which was launched in June 2008 by Jonathan Feinberg [27]. Since then, it has been phenomenal in both people’s reaction and its popularity. Its usage in every sector of the social community is well described in [23]. Wordle takes a text as an input and generates a word cloud for users. In order to guide how the cloud is generated, there are several parameter values set by users: the number of words shown, the angles to draw words, the color theme which is assigned to the words in a random fashion, etc. For the font size, Wordle uses linear scaling of the words according to their frequency. Wordle relies on the notion that, in many cases, the more frequently they appear in the text, the more important the words are. Wordle also provides some basic filters when calculating the frequency. For example, users can choose to remove common words like articles or prepositions a.k.a. stop words. Users may also choose to remove numerals or force the words into the upper-case or lower-case. There are also several options for angle available in Wordle. Words can be placed on the canvas in various ways (all horizontal, all vertical, partially horizontal and vertical, or random). While Wordle is a fun and easy tool to generate a word cloud, it lacks the flexibility in constructing the layout. Users can only change the parameter values and hope for Wordle to create the shape which they yearn for. To address this problem, it is necessary to enable users to fine-tune the result layout.

MANIWORDLE
The main goal of ManiWordle is to unravel some of the limitations in Wordle, while keeping the same set of functionalities. ManiWordle is built upon the Wordle concept that allows users to determine overall layout scheme through a user-adjustable set of parameters. To support users’ more direct involvement in layout generation process, ManiWordle provides intuitive manipulation of the layout result.

More User Control over Wordle Layout
There are several cases when users need more control in generating the layout. The first scenario is when a user serendipitously finds a layout which is somewhat close to what he/she actually wanted, while “playing” with various combinations of parameters. From that point, he/she may not want to make any changes to the parameters anymore for two reasons. First, the layout is not reproducible by simple composition of the same configuration used to generate it. Second, there is no guarantee that he/she can achieve a better layout by producing more random layouts. However, he/she may still have several little complaints about this somewhat-close-to-wanted layout, such as unimportant words being too close to significant words that they might deteriorate the significance of the important words. He/she cannot simply remove the word from the layout because that initiates a total reconstruction of the layout which might be substantially different from the layout which the user came across in the previous result. Another scenario is when the user wants some words to be distinguishable and outstanding from the others. The well-known trick of getting a particular word appears larger than the others is to add more of the same word into the input text, indirectly affecting the size of the word. However, this may not be applicable if the user wants to keep the size coding intact but still wants to emphasize some words. In such a case, he/she may want to use other means of making some words stand out. For example, separating a word from the cluster and placing it in a segregated location or using a particular color for a word that is highly distinguishable from the others trigger the pop-out or proximity effect in pre-attentive processing [25]. However, with Wordle, he/she has control over neither the location nor the color of an individual word. Changing the locations of words is what one is given the least control in Wordle. It is a completely random process and he/she can only choose whether or not to place the words in alphabetical order. When a user wants to change the color of words, he/she has to change the color theme from the pre-defined palettes or create a custom palette where he/she can specify exact colors it will contain. The color of each word is randomly chosen from the available colors in the selected palette. The user needs to re-color the words from the palette repeatedly until he/she gets a desired result. Again, as the number of the colors that he/she wants to have on a palette increases, if at all possible, it may take an arbitrarily long time to have a layout that he/she craves. Also, regarding changing angles of words in Wordle, one can only set the approximate proportion of the words set for each angle (i.e., mostly horizontal, half and half, mostly vertical, etc.). However, the angle chosen for a particular word is still arbitrary and the user is forced to re-generate the layout until he/she has all desired words set in right orientation (unless it is set to all-horizontal or all-vertical, in which case every word is set in the same orientation). Again, as the number of the words that the user wants to have a specific angle increases, it may not be possible to get a desired result within a reasonable amount of time. In summary, users need the ability to change the properties of the individual word as well as the global settings. In order to give users more control over the layout, ManiWordle expands Wordle’s functionality by providing various user interactions for manipulating individual words. With ManiWordle, users can directly confront the source of dissatisfaction, rather than repeatedly trying different settings without any certainty that the desired result will show up.

Design Rationale
In this section, we describe our rationale behind the design of the ManiWordle interaction.
Provide a compelling starting point
We believe that users do not want to configure every tedious aspect of their wordle layout manually. Furthermore, before they see a word cloud, users may not even have much idea about the text they are trying to visualize. Thus, it is important to provide an aesthetically compelling starting point even if it is randomly generated. This is especially helpful for general audience lacking an artistic talent. Since it is proven that Wordle layouts are very compelling [23], ManiWordle mimics Wordle’s behavior at the beginning. It takes an input text, processes the text based on the parameters set by users, and builds the layout. If not set by users, the initial fonts, color palettes, and angles are used, which are randomly chosen by the program at the beginning. After the initial layout is built, users are able to interact with the layout to customize it until they are satisfied.

Bigger words are more important
Previous research shows that big words capture the viewers’ attention more easily than small ones [25]. We also believe that users are more interested in the location of bigger words than smaller words, and thus they would handle the bigger words before they manipulate the smaller ones. It is also better to give priority to big words in determining where to place the words in order to produce a more compact layout, because smaller words might occupy the potential spaces that otherwise could have been used by big words. Small words have a chance to find themselves fit in between or even within bigger words later. This does not mean the small words are always expendable from the layout. Many aspects of Wordle’s aesthetic quality come from the small words filling the spaces, forming a shape of a cloud, often surrounding the big words, and providing the holistic view of the layout. One of the main controls provided by ManiWordle is to directly change the locations of individual words. When we allow users to manipulate the locations of words, we keep the golden rule: Bigger words always win. When users move a word to a place where another words with smaller font size lie, all the smaller ones will step aside or move away to make a room for the big one. On the other hand, small words cannot push away big words because we assume that users are satisfied with the locations of the big words. Thus, if users want to put a small word on where bigger words already occupy, they have to move bigger words first to give space to the small word.

Reflect users’ intention as much as possible
A user can “pin” any words to make them tolerable to other changes. This is a key concept for reflecting users’ intention. When a user changes a location or angle of a word, there are two cases dealing with collision between words. First, the user may be moving (dragging or rotating) a word over other words. If the words are pinned, nothing will happen since they hold their position to reflect users’ intention, regardless of size of the selected word. However, if the words are not pinned and the selected word is bigger than them, the words will be pushed away in a real time. (More on how pin works will be explained in Section 3.3). Second, the user may drop a word over other words. In this case, we go by the golden rule; bigger words always win. If the dropped word is smaller than the other words, it cannot be dropped there and will be pushed away.

Provide fluent animation so users can follow changes
As described above, some user interactions trigger automatic relocation of some words. To make these changes traceable, ManiWordle shows all changes in fluent animation. For example, when a smaller word is pushed away by a bigger word, users will witness the smaller word’s transition from its original location to the new location. Even in the case of total rearrangement such as global angle setting change, smooth animation still helps users keep track of changes between the previous state and the current state. The same rule applies when the layout change happens by un-do or re-do.

Interaction
At the beginning, no word is pinned or selected. Once users click on a word, a framed rectangle appears around the selected word indicating that the word is selected and pinned (Fig. 1). Once a word is pinned, it remains pinned until users explicitly unpin it individually or by using the “Unpin All” option. The rectangle has an extended leg with a small circle tip. A mouse-over on a word glyph changes the cursor to a hand cursor, indicating that the corresponding word can be moved by dragging. When the cursor is placed over the circle tip, it changes to a finger cursor, indicating that the corresponding word can be rotated by dragging as well. When users move or rotate a word, collision detection between the word and all other words on canvas is performed in real-time. Via various acceleration techniques (described later in detail), it is performed at an interactive speed, enabling ceaseless animations. Any smaller words that collide with the selected word are pushed away from their locations and move to the closest available positions. Users can drag and drop a word at any locations. The new locations for all words intersecting the selected word are calculated in real time, and the words then move to their available spots if they are smaller than the selected word. Keeping our design rationale, ManiWordle does not push away any pinned words intersecting the selected word in the middle of dragging even if they are smaller than the selected one. Additional rotation options are found in the context menu; users can rotate a word discretely by 90 degree to both clockwise and counter-clockwise directions, or even to a custom angle that users can specify by typing in a number. This option allows users to set the word to “jump” to a specific angle. If users were only given an option of rotation by dragging the circle tip, the word might collide with other words near it and push them out to other places while rotating. In order to minimize this side effect, users can use these options to rotate a word discretely. Once users are satisfied with all big words in terms of their position, color, angle, and so on, they can click on the "Re-layout" button to make the unpinned small words pack around pinned words in order to keep them all in a shape of a cloud instead of an utterly scattered clutter (Fig. 2). When users mouse over the "Re-layout" button, all pinned words are highlighted by making unpinned words fade away to the background to give users a visual cue on which words are fixed and which words are vulnerable to changes (Fig. 2 left). Also, de facto industry standard undo, redo shortcuts (i.e., Ctrl+Z, Ctrl+Y) were provided at users’ convenience.

Implementation
ManiWordle is written in C# and built on XNA [13] Framework 3.1 and .NET Framework 3.5 on Windows 7. It is developed as a standalone executable application, which fully executes all graphical computations in GPU to accelerate the computation by exploiting massive parallel-processing ability of GPUs and to leave CPU much room for heavy collision-detection logic. When determining the locations of words, ManiWordle follows the pseudo code introduced in [23] and has been tweaked to support the functionalities of ManiWordle. The major changes were regarding further optimization of the algorithm. While [23] presents some optimization heuristics, some additional heuristics are applied to make ManiWordle run on a slow PC environment (compared to the Google App Engine, or Google’s cloud computer service used by Wordle). Among various optimization heuristics, we present three major ones yielding considerable computational acceleration.

Adjusted rate of growth in spiral radius
The original Wordle picks an initial position for a word and updates its position on a spiral of increasing radius for testing for the intersection between the word to be placed and the words already on the canvas. In ManiWordle, the growth rate of the spiral radius varies proportional to the size of the word (Fig. 3). This is derived from the observation that if a word A is larger than a word B, it is more likely that A will intersect a word C than that B will intersect C when we test for the intersection for the next outer layer of the spiral. Also, the intersection test is performed at some uniform interval, not at all points along the spiral, in which the interval depends on the size of the word as well. This idea is also closely related to the observation made in Section 7.1.1 of [23].

Multi-core optimization
The placement of the words is performed in a placer thread which runs separately from the rendering thread. The placer thread takes the list of the words and places them while ensuring that none of them intersects with the words already placed on the canvas. Using a separate thread for words placement is to make sure that the heavy computations in the placement logic do not cause delay in the rendering loop where the animation is handled. The placer thread is initialized once and is never destroyed until the program is terminated because the overhead of destroying and recreating the thread every time necessary could be costly. Instead, it waits indefinitely until it detects words that need to find new locations. The main reason for this is that, in ManiWordle, we may invoke the placer multiple times a second during the runtime to allow real-time manipulation of a word’s location, angle, and font, in which we need to push the words that intersect the updated word. The placer thread also spawns multiple collision test threads depending on the number of cores or logical threads available on CPU. The number of threads may vary depending on the system. For the sake of the experiment, we used six threads. We ran the simulation multiple times and picked the number which showed the fastest computation time on the system used for the experiment, which is described in Section 4. The example of how the place thread operates is shown in Fig. 4. Since multiple points are being checked for availability simultaneously, we can assign one thread per processor core and shorten the time approximately by the factor of the number of threads.
Collision detection with reduced-resolution image
It can be quite expensive to do the collision detection on spline-based shapes (one of vector-based collision detections in which the modern fonts are defined). Instead, ManiWordle makes a 1-bit mask image (literally, a bitmap) for each word. For every pixel on which the image of a word has a non-transparent value, the mask image will have a bit 1, and 0 otherwise. The reason for using a 1-bit mask image is to maximize cache hits. One pixel in an image of a word is normally represented in ARGB format which is 32 bits. However, the actual color of the word is irrelevant when checking for the collision. Therefore, we can reduce the data into a 1-bit-per-pixel image, resulting in much better cache hits when loaded into memory. ManiWordle reduces the size of the mask image to have only one third the original size in each dimension, resultantly having only one ninth of the number of pixels compared with the original mask image. Collision detection based on these smaller mask images does not perform as accurately as either of vector-based collision detection or pixel perfect test (with full resolution) that guarantees no overlaps between any two given words; however, it is much faster due to the reduction in the number of pixels to check to the only oneninth the number of pixels in the original mask image and it is shown to produce the results that are good enough for the purpose of ManiWordle with minor overlap in a few places. By exploiting these optimizations, specifically the usage of multiple threads, image representation by 1-bit mask, and reduction of the mask image resolution to 1/9, we can get a significant speed boost. When these optimization techniques and the aforementioned heuristics (i.e., the adjusted growth rate of spiral radius and the intersection test with some interval) are all combined, ManiWordle delivers the animated rendering of 500 words with 30 frames per second. It is fast enough to allow users a real-time interaction with ManiWordle running on desktop computers including the one used in the experiment, which is described in Section 4.2.5.
EVALUATION
To evaluate ManiWordle, we conducted two studies. We first conducted a preliminary usability study to identify major usability issues and investigate users' reaction to ManiWordle. After making some improvements according to the results from the first study, we ran a controlled experiment to see if ManiWordle with more flexible user control is better than Wordle in terms of subjective satisfaction for creating word clouds.
Usability Study
We recruited 6 participants (3 females and 3 males) who were all graduate students majoring Computer Science. None of the participants has used Wordle before. After 15 minutes of training, participants were asked to manipulate position, orientation, and typographical properties of several big words to match a target layout presented. The big words that participants had to manipulate were highlighted with an arrow mark in the target layout image printed on a paper. (The target layouts were prepared using ManiWordle.) They repeated the task three times with three different data: 1) a Wikipedia entry on Yu-Na Kim, a gold medal-winning South Korean figure skater of the 2010 Winter Olympics; 2) a Wikipedia entry on StarCraft, a popular strategy video game; and 3) the Wordle paper by Viégas et al [23]. All participants finished the task with each input text within 5 minutes without any difficulties. Participants seemed enjoying using ManiWordle. Two of them commented that “it was fun,” and three of them said that “it was intuitive.” We did not identify any major usability issues from the study.
Controlled Experiment
Datasets and the Task For the study, three different text datasets were prepared that varied regarding the emotional attachment between the text and the participants. This is based on the finding that 57 percent of the Wordle users are the actual authors of the text, while only 7 percent has never looked at it before [23]. The first text with the least emotional attachment was an InfoVis conference paper about Wordle written by Viégas et al [23]. None of the participants has read the paper before. The second text with moderate emotional attachment was a Wikipedia entry on Yu-Na Kim. This article was selected considering her great popularity and good reputation among South Koreans. The last text with the most emotional attachment was the participants' own paper. We removed the “references” section from each paper to prevent too many non-keywords competing for the word counts. We also prepared a text for the practice task. A Wikipedia page on Beatles was used because it was familiar to the participants. Each participant was asked to make as aesthetically appealing presentation as possible for each of the three text datasets.
Participants We recruited 12 participants (11 males and 1 female). 11 of them are majoring in Computer Science and one participant is majoring in Chemical Engineering. They are all graduate students. None of the participants has used Wordle before, while three of them have seen other tag clouding techniques on internet blogs. We screened participants so that they have an experience in writing a conference or journal paper in English. Participants were asked to email the experimenter or bring the favorite of their own papers written in English in their USB thumb-drives. They were given about $15 for their participation.
Hypotheses
We hypothesized that the extended functionality of Wordle results in higher user satisfaction and it lets people feel more creative while making their presentations. We also expected that the more the participants are emotionally attached to the text, the more effort they are going put in creating the word cloud.
Study Design and Procedures
We ran the study as a 2 (Visualization: Wordle, ManiWordle) × 3 (Text: the least, moderate, and the most attachment) within-subject design. Each participant performed the task (i.e., making his/her aesthetically appealing presentation) for all the three text datasets using all the visualizations. We counterbalanced the order of visualizations to avoid the learning effect. Within the six participants testing the two visualizations in the same order, the three text datasets were also counterbalanced. Before the experiment, participants were given a tutorial on the experiment. Before beginning the test on each visualization, participants also performed a representative practice task in order to familiarize themselves both with the task and visualization. For each task, participants were told that they have roughly 5 minutes to complete. After 5 minutes, they were told to try to wrap up in 1 minute. However, they were allowed to spend more time as needed if they were still not satisfied with the result. The 5 minute limit was given to prevent participants from spending too much time on the first few tasks and then being exhausted for the rest of the experiment. After each session with a visualization using all the three text datasets, participants were asked to fill out the post-session questionnaires for subjective evaluation. The same procedure was repeated for the other visualization. When a participant finished both sessions, they were asked to fill out a demographic survey along with a question which asks their preference between the two visualization tools and the subjective reasons. The experiment took about an hour. If a participant was exposed to Wordle in the first session, we only explained the features added to ManiWordle before beginning the second session using ManiWordle. For the opposite case where participants tried ManiWordle first, we were very careful not to use negative terms like “restriction,” “removal,” “restrain,” or “limit” when explaining Wordle in the second session. We did not want participants to feel they are given the additional functionalities of ManiWordle first and got them taken away for Wordle.
Experiment Setup
Each participant worked on a quad-core PC with a 27” LCD widescreen display running at a 1920×1200 pixel resolution. The system was also equipped with a NVIDIA 9800 GX2 GPU with 512 MB of memory. The program was maximized to fit the entire screen except for the taskbar. All events were logged by recording every single user interaction such as re-color, re-layout, change color/font, etc. For statistical analysis on the number of user interactions, we counted every user interaction and the interactions that affected only the global layout such as randomize, re-layout, remove a word, etc. When participants had made a satisfied aesthetic presentation using visualization, they were asked to notify the experimenter the task completion. The task completion time was manually measured.
Results
We performed statistical analysis on participants' responses to the six questions from each session, preference data from the post-study questionnaire, and elapsed time to finish each task. After each session, participants were asked to answer the following 6 questions to collect subjective ratings about each visualization by using a 7 point Likert scale [Rating: 1 = Strongly disagree; 7 = Strongly agree] (Table 1). The questions with significantly different ratings are marked with an asterisk (*). We analyzed the subjective ratings using Friedman’s Chi-Square test. Participants were significantly satisfied more with the result layout of ManiWordle than that of Wordle (χ2 (1) = 9, p = .039). Other than that, we did not find any statistically significant difference between the visualizations. In the post-study survey, we did not find any statistical significance between the order of the visualization participants tried and the preference. 10 out of 12 participants said that they liked ManiWordle more than Wordle. Every participant who preferred ManiWordle mentioned that its ability to fine-tune the layout and the flexibility of manipulation was the reason. One participant specifically stated that it was easy to fix big words in the location he desired and fill out the rest through the automated process. Another participant said that while ManiWordle was more difficult to learn and some of the rules on conflict resolution were confusing, it was still better than Wordle which does not allow the fine tuning. Also, two participants mentioned that the animation makes ManiWordle less boring and more fun. The two participants who preferred Wordle to ManiWordle mentioned that they did not like to adjust too many things. One of them criticized that the results of two programs were not quite different. And he also said, “I had some feelings that if I changed something, I couldn't get it back later.” He did not utilize “undo” which could have eased the problem. When asked why, he said he forgot that it was there. The other participant said that ManiWordle requires too much effort and labor. He said that Wordle requires much less time to build a word cloud and often the result was as good as that of ManiWordle. We also investigated the effect of the visualization and the emotional attachment level on the amount of time to complete a task. For each task, we measured the total elapsed time to make a satisfying tag cloud with each visualization. We ran a 2 (Visualization: Wordle, ManiWordle) x 3 (Text: the least, moderate, and the most attachment) analysis of variance and Tukey's HSD post-hoc test. We found a significant main effect of Text (F2,66 = 3.42, p = .039) with post-hoc tests showing that participants spent more time to create a wordle for their own research paper than for the Wordle paper (p = .03) (Fig. 5). We recorded all of the user interaction to analyze the effect of the visualization and the emotional attachment level on the number of user interactions in creating Wordles. We performed a 2 (Visualization) x 3 (Text) ANOVA test with the number of total interactions as the dependent variable. We found a significant main effect of Visualization (F1,66 = 5.01, p = .03). This result shows that participants initiated significantly more user interactions with ManiWordle than Wordle. We performed another 2 (Visualization) x 3 (Text) ANOVA test with the number of only the interactions that affected the global layout as the dependent variable. Again, we found a significant main effect of Visualization (F1,66 = 5.40, p = .02). This result shows that the participants performed significantly less user interactions to globally change the layout with ManiWordle than with Wordle.
Observations on the final layouts
Using ManiWordle, most participants produced the layouts which could have not been produced using Wordle. For example, one participant emphasized some words using a color-change feature in ManiWordle (Fig. 6 left) Words for Yu-Na Kim’s name, job, and victory in the world championship are significant keywords which can only be understood if the participant knows theme and context of the text. Finding out these true keywords instead of just using the number of appearance is a much more challenging problem for the automated algorithms. Fig. 7 left shows results from a participant who clustered the words based on the semantic meanings in ManiWordle. He performed clustering for all three input texts. This type of clustering is also a challenging problem and requires users’ involvement. ManiWordle utilizes users’ knowledge in the word cloud generation process, therefore produces the layout easily appreciated by users.
DISCUSSION AND FUTURE WORK
The results of the controlled experiment support the need of flexible user control provided by ManiWordle. First of all, ManiWordle’s extended control over Wordle yielded higher user satisfaction. Also, most participants preferred ManiWordle overall compared to Wordle. In fact, they significantly utilized the added control for the individual words. Among all the configuration changes participants made with ManiWordle, 46% of them were to tweak the individual word configuration on average. Furthermore, participants changed the global configuration significantly less frequently with ManiWordle than with Wordle. It is well known that usability of interactive systems decreases as the system becomes more flexible by supporting more functionality [10]. While ManiWordle’s interaction was relatively simple, it is still adding some complexity to Wordle. Nonetheless, we found it very encouraging that ManiWordle was as easy to learn and use as Wordle based on Q1 and Q2 in Table 1, where we did not find any significant difference. The study results also supported our hypothesis that participants would spend more effort in creating a word cloud for the text that they are more emotionally attached to. There was no significant effect of visualizations on time spent to create the output, indicating that people still spend a considerable amount of time with Wordle even if they did not have control. Interestingly enough, we did not find any effect of text on the number of user interactions. This may imply that participants had more cautious interaction for the text they cared about more. Our work was originally, in part, inspired by the fact that people felt creative in using Wordle. Given that people felt creative without much control, we initially anticipated that the flexibility provided by ManiWordle may result in users' feeling more creative. To our surprise, participants neither thought that it was more fun to use nor felt more creative even if they had more control with ManiWordle. This leads us now to wonder if people might feel creative as long as they have aesthetic results since they are inclined to have more positive attitude toward aesthetic designs than less-aesthetic designs [9]. We also suspect that it resulted from the fact that all participants were computer science graduate students. Thus it might be interesting to see if other user population with artistic aptitude (e.g., graphics designers) would take flexible ManiWordle as a more creative way to design a layout. On the other hand, the encouraging results of the controlled experiment opened several avenues for future research. In this study, since we wanted to preserve the original design of tag clouds, we did not allow people to change the font size. Given that a significant number of people created wordles not specifically for data analysis and many people manipulate the text to be fed into Wordle to change the font size, we wonder if it is better to allow people to fully manipulate the Wordle output. In addition to letting people directly manipulate the font size, we can allow them to add words to the word cloud. It would be interesting to investigate whether enabling richer user control could change people’s reaction in terms of fun and creativity in future work. Also, as some participants have commented, ManiWordle can be extended to support simultaneous selection of multiple words. This will allow users to manipulate the contextually relative words together. For example, users may set the words with similar colors, align them on common horizontal, or form a new cluster in somewhere distinctive (Fig. 7). In terms of the layout algorithm, it would be interesting to employ different physics-based layouts to simulate the words as blocks on the table. We can also try to incorporate other contextaware optimizations, such as an automatic approach to contextpreserving dynamic word clouds introduced by Cui et al. [26]. Another promising avenue is exploring more natural user interfaces with which people can interact with ManiWordle. For example, manipulating words with fingers/gestures using a multitouch screen may also increase people’s satisfaction in terms of fun and creativity.
CONCLUSION
Wordle creates aesthetic visual representations, fusing together with text/document visualization techniques, and has attracted a huge number of people to participate in creative wordling feasts. In this paper, we have presented a Wordle-based visualization called ManiWordle, which enables custom manipulations to revamp interactions with the layout. ManiWordle provides flexible control over Wordle by allowing people to directly manipulate typography, color, position, and orientation for the individual words. We have described our design rationale along with the interaction techniques for tweaking the layout. We conducted a preliminary usability study to identify major usability issues and areas of improvement. Through the controlled experiment, we compared ManiWordle to Wordle in terms of user satisfaction for the layout result as well as how easily people could learn and use. The results suggest that ManiWordle’s ability to provide flexible control over Wordle yields significantly higher user satisfaction without introducing more difficulties. Also, most participants liked ManiWordle more than Wordle.
ACKNOWLEDGMENTS
We would like to thank HCIL & VPRG members for helping us with valuable comments and suggestions during design and evaluation of ManiWordle. This work was supported in part by the BK21 Project in 2010 and by Basic Science Research Program through NRF of Korea funded by the MEST (No. 2010-0002266 and No. 2010- 0017178). The ICT at Seoul National University provides research facilities for this study.

